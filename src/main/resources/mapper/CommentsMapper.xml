<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.volcano.examonlineserv.mapper.CommentsMapper">
  <resultMap id="BaseResultMap" type="com.volcano.examonlineserv.bean.Comments">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="targetId" jdbcType="INTEGER" property="targetid" />
    <result column="userId" jdbcType="INTEGER" property="userid" />
    <result column="type" jdbcType="CHAR" property="type" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="zan" jdbcType="INTEGER" property="zan" />
    <result column="createAt" jdbcType="TIMESTAMP" property="createat" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.volcano.examonlineserv.bean.Comments">
    <result column="img" jdbcType="LONGVARBINARY" property="img" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, targetId, userId, type, description, zan, createAt
  </sql>
  <sql id="Blob_Column_List">
    img
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.volcano.examonlineserv.bean.CommentsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.volcano.examonlineserv.bean.CommentsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comments
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comments
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.volcano.examonlineserv.bean.CommentsExample">
    delete from comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.volcano.examonlineserv.bean.Comments">
    insert into comments (id, targetId, userId, 
      type, description, zan, 
      createAt, img)
    values (#{id,jdbcType=INTEGER}, #{targetid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, 
      #{type,jdbcType=CHAR}, #{description,jdbcType=VARCHAR}, #{zan,jdbcType=INTEGER}, 
      #{createat,jdbcType=TIMESTAMP}, #{img,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="com.volcano.examonlineserv.bean.Comments">
    insert into comments
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="targetid != null">
        targetId,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="zan != null">
        zan,
      </if>
      <if test="createat != null">
        createAt,
      </if>
      <if test="img != null">
        img,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="targetid != null">
        #{targetid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=CHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="zan != null">
        #{zan,jdbcType=INTEGER},
      </if>
      <if test="createat != null">
        #{createat,jdbcType=TIMESTAMP},
      </if>
      <if test="img != null">
        #{img,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.volcano.examonlineserv.bean.CommentsExample" resultType="java.lang.Long">
    select count(*) from comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update comments
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.targetid != null">
        targetId = #{record.targetid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=CHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.zan != null">
        zan = #{record.zan,jdbcType=INTEGER},
      </if>
      <if test="record.createat != null">
        createAt = #{record.createat,jdbcType=TIMESTAMP},
      </if>
      <if test="record.img != null">
        img = #{record.img,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update comments
    set id = #{record.id,jdbcType=INTEGER},
      targetId = #{record.targetid,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=INTEGER},
      type = #{record.type,jdbcType=CHAR},
      description = #{record.description,jdbcType=VARCHAR},
      zan = #{record.zan,jdbcType=INTEGER},
      createAt = #{record.createat,jdbcType=TIMESTAMP},
      img = #{record.img,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update comments
    set id = #{record.id,jdbcType=INTEGER},
      targetId = #{record.targetid,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=INTEGER},
      type = #{record.type,jdbcType=CHAR},
      description = #{record.description,jdbcType=VARCHAR},
      zan = #{record.zan,jdbcType=INTEGER},
      createAt = #{record.createat,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.volcano.examonlineserv.bean.Comments">
    update comments
    <set>
      <if test="targetid != null">
        targetId = #{targetid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=CHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="zan != null">
        zan = #{zan,jdbcType=INTEGER},
      </if>
      <if test="createat != null">
        createAt = #{createat,jdbcType=TIMESTAMP},
      </if>
      <if test="img != null">
        img = #{img,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.volcano.examonlineserv.bean.Comments">
    update comments
    set targetId = #{targetid,jdbcType=INTEGER},
      userId = #{userid,jdbcType=INTEGER},
      type = #{type,jdbcType=CHAR},
      description = #{description,jdbcType=VARCHAR},
      zan = #{zan,jdbcType=INTEGER},
      createAt = #{createat,jdbcType=TIMESTAMP},
      img = #{img,jdbcType=LONGVARBINARY}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.volcano.examonlineserv.bean.Comments">
    update comments
    set targetId = #{targetid,jdbcType=INTEGER},
      userId = #{userid,jdbcType=INTEGER},
      type = #{type,jdbcType=CHAR},
      description = #{description,jdbcType=VARCHAR},
      zan = #{zan,jdbcType=INTEGER},
      createAt = #{createat,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>